{"version":3,"sources":["components/headerHideScroll.js","components/dataAddedDialog.js","components/sleepButton.js","components/wakeButton.js","pages/addData.js","pages/help.js","pages/login.js","components/displayBurden.js","components/sleepGraph.js","components/sleepWakeGraph.js","pages/viewData.js","pages/signup.js","pages/logoutPage.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","HeaderHideScroll","app","location","client","mongodbClient","db","useState","anchorEl","setAnchorEl","redirect","setRedirect","target","setTarget","to","pathname","AppBar","Toolbar","IconButton","edge","color","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","component","DataAddedDialog","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","dataType","useEffect","openDialog","thisMoment","moment","format","Dialog","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","useStyles","makeStyles","icon","fontSize","text","borderBottomStyle","borderBottomColor","borderBottom","width","marginLeft","SleepButton","classes","dispDialog","setDialog","sleepData","collection","userID","user","now","month","date","year","time","insertOne","sleep","timeStamp","catch","console","error","className","WakeButton","button","marginTop","padding","spacing","textAlign","AddData","Grid","container","item","xs","sm","md","Help","palette","secondary","margin","up","box","backgroundColor","borderRadius","display","flexDirection","alignItems","alignSelf","avatar","main","borderColor","borderWidth","loginButton","loginHeader","alignContent","link","errorHeader","form","signupButton","Login","setApp","setClient","setMongoDBClient","setDB","loginError","setError","email","setEmail","password","setPassword","setUserID","Stitch","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","users","defaultAppClient","Container","maxWidth","CssBaseline","Paper","Avatar","noValidate","TextField","required","fullWidth","label","name","autoComplete","value","onChange","type","credential","UserPasswordCredential","auth","loginWithCredential","then","authedUser","log","err","flex","flexGrow","paddingTop","heading","borderStyle","DisplayBurden","undefined","data","setData","find","toArray","jackCount","i","length","jackEff","toFixed","calculateEffort","pieData","labels","datasets","hoverBackgroundColor","SleepGraph","setSleep","wakeData","setWake","options","sleepCollection","getData","hours","days","push","startTime","endTime","dur","duration","diff","asSeconds","calculateDuration","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","SleepWakeGraph","setHours","complete","setComplete","graphData","sleepTimes","zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eightteen","nineteen","twenty","twentyone","twentytwo","twentythree","calculateCounts","ViewData","lg","SignUp","setLoginError","signupError","setsignupError","mongdbClient","createUser","owner_id","message","getProviderClient","UserPasswordAuthProviderClient","registerWithEmail","login","paddingBottom","Logout","App","basename","window","exact","path","Signup","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.156d15be.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n    },\n})(props => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nfunction ElevationScroll(props) {\n    const { children } = props;\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    window: PropTypes.func,\n};\n\nexport default function HeaderHideScroll(props) {\n    const app = props.location.app;\n    const client = props.location.client;\n    const mongodbClient = props.location.mongodbClient;\n    const db = props.location.db;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [redirect, setRedirect] = useState(false);\n    const [target, setTarget] = useState('');\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleLogout = (event) => {\n        setAnchorEl(event.currentTarget)\n        setRedirect(true)\n        setTarget('/logout')\n    };\n    const dashboard = (event) => {\n        setAnchorEl(event.currentTarget)\n        setRedirect(true)\n        setTarget('/dashboard')\n    }\n    const addData = (event) => {\n        setAnchorEl(event.currentTarget)\n        setRedirect(true)\n        setTarget('/add')\n    }\n\n    if (redirect) {\n        return <Redirect to={{ pathname: target, app, client, mongodbClient, db }} />\n    } else {\n        return (\n            <ElevationScroll {...props}>\n                <AppBar>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon onClick={handleClick} />\n                            <StyledMenu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={addData}>Add Data</MenuItem>\n                                <MenuItem onClick={dashboard}>Dashboard</MenuItem>\n                                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                            </StyledMenu>\n                        </IconButton>\n                        <Typography variant=\"h5\" component=\"div\">BabyTracker App</Typography>\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n        )\n    }\n}","import React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport { useTheme } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nexport default function DataAddedDialog(props) {\n    const [open, setOpen] = useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const dataType = props.dataType;\n\n    useEffect(() =>{\n        setOpen(props.openDialog);\n    }, [props.openDialog]);\n  \n    let thisMoment = moment().format('MMMM Do YYYY, h:mm:ss a');\n\n    return (\n        <div>\n          <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            onClose={props.handleClose}\n            aria-labelledby=\"responsive-dialog-title\"\n          >\n            <DialogTitle id=\"responsive-dialog-title\">{\"Data Added!\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Baldy {dataType} at {thisMoment}.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button autoFocus onClick={props.handleClose} color=\"primary\">\n                Close!\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      );\n    }","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport { Button, Typography } from '@material-ui/core/';\nimport DataAddedDialog from './dataAddedDialog';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fontSize: '8rem',\n        color: '#7164f9',\n    },\n    text: {\n        fontSize: '2rem',\n        borderBottomStyle: 'solid',\n        borderBottomColor: 'grey',\n        borderBottom: '1px',\n        width: '75%',\n        marginLeft: '14.5%',\n    },\n})\n);\n\n\nexport default function SleepButton(props) {\n    const classes = useStyles();\n    const [dispDialog, setDialog] = useState(false);\n    const handleClose = () => {\n        setDialog(false);\n      };\n    const sleepTimeStamp = () => {\n        const mongodb = props.location.mongodbClient;\n        const sleepData = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        const userID = props.location.user;\n        const now = {\n            month: moment().format('MMMM'),\n            date: moment().format('dddd Do'),\n            year: moment().format('YYYY'),\n            time: moment().format('h:mm:ss a'),\n        };\n        setDialog(true);\n        sleepData.insertOne({\n            sleep: true,\n            timeStamp: now,\n            user: userID\n        }).catch(console.error);\n    };\n\n    return (\n        <>\n            <Button\n                onClick = {sleepTimeStamp}\n            ><NightsStayIcon className={classes.icon} />\n            </Button>\n            <Typography className={classes.text}>Sleep</Typography>\n            <DataAddedDialog openDialog={dispDialog} handleClose={handleClose} dataType={'sleep'} />\n        </>\n    )\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AlarmAddRoundedIcon from '@material-ui/icons/AlarmAddRounded';\nimport DataAddedDialog from './dataAddedDialog';\nimport { Button, Typography } from '@material-ui/core/';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fontSize: '8rem',\n        color: '#b23f3f',\n    },\n    text: {\n        fontSize: '2rem',\n        borderBottomStyle: 'solid',\n        borderBottomColor: 'grey',\n        borderBottom: '1px',\n        width: '75%',\n        marginLeft: '14.5%',\n    },\n})\n);\n\nexport default function WakeButton(props) {\n    const classes = useStyles();\n    const [dispDialog, setDialog] = useState(false);\n    const handleClose = () => {\n        setDialog(false);\n      };\n    const wakeTimeStamp = () => {\n        const mongodb = props.location.mongodbClient;\n        const sleepData = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        const userID = props.location.user;\n        const now = {\n            month: moment().format('MMMM'),\n            date: moment().format('dddd Do'),\n            year: moment().format('YYYY'),\n            time: moment().format('h:mm:ss a'),\n        };\n        setDialog(true);\n        sleepData.insertOne({\n            sleep: false,\n            timeStamp: now,\n            user: userID\n        }).catch(console.error);\n    };\n    return (\n        <>\n            <Button\n                onClick={wakeTimeStamp}\n            ><AlarmAddRoundedIcon className={classes.icon} /></Button>\n            <Typography className={classes.text}>Wake</Typography>\n            <DataAddedDialog openDialog={dispDialog} handleClose={handleClose} dataType={'wake'} />\n        </>\n    )\n\n}","import React from 'react';\nimport { Grid } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HeaderHideScroll from '../components/headerHideScroll';\nimport SleepButton from '../components/sleepButton';\nimport WakeButton from '../components/wakeButton';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginTop: '15%',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n    },\n})\n);\n\nfunction AddData(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <HeaderHideScroll {...props}></HeaderHideScroll>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={2} md={3}></Grid>\n                <Grid item xs={12} sm={4} md={3} className={classes.button}><SleepButton {...props} /></Grid>\n                <Grid item xs={12} sm={4} md={3} className={classes.button}><WakeButton {...props} /></Grid>\n                <Grid item xs={12} sm={2} md={3}></Grid>\n            </Grid>\n        </>\n    )\n\n};\n\nexport default AddData;","import React from 'react';\n\n\nexport default function Help() {\n    return (\n        <>\n        <div>Help</div>\n        </>\n    )\n};","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Avatar, Button, Container, TextField, Typography, CssBaseline, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Stitch, RemoteMongoClient, UserPasswordCredential } from \"mongodb-stitch-browser-sdk\";\n\n// Styling:\nconst useStyles = makeStyles(theme => ({\n    text: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        [theme.breakpoints.down('sm')]: {\n            width: '85%',\n            margin: '0 10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '65%',\n            margin: '0 15%',\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            margin: '0 25%',\n        },\n    },\n    box: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px',\n        width: '50%',\n        marginTop: theme.spacing(8),\n        marginLeft: '25%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        border: 'solid',\n        borderColor: 'lightgrey',\n        borderWidth: '1px',\n    },\n    loginButton: {\n        color: 'white',\n        border: 'solid',\n        borderColor: 'black',\n        borderWidth: '1px',\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginHeader: {\n        width: '40%',\n        color: 'black',\n        textAlign: 'center',\n        alignContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '22px',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '36px',\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '52px',\n        },\n    },\n    link: {\n        padding: '5%',\n    },\n    errorHeader: {\n        width: '40%',\n        color: 'white',\n        backgroundColor: '#f28c82',\n        textAlign: 'center',\n        alignContent: 'center',\n        border: 'none',\n        borderRadius: '5px',\n        margin: '0 25%',\n        padding: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    signupButton: {\n        color: 'white',\n        border: 'solid',\n        borderColor: 'black',\n        borderWidth: '1px',\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction Login() {\n    //Initial variable creation:\n    const [app, setApp] = useState('');\n    const [client, setClient] = useState('');\n    const [mongodbClient, setMongoDBClient] = useState('');\n    const [db, setDB] = useState('');\n    const [loginError, setError] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [user, setUserID] = useState('');\n    const classes = useStyles();\n\n    //Setup Mongo Stitch App:\n    useEffect(() => {\n        // Initialize Stitch App Client\n        const client = Stitch.initializeDefaultAppClient(\"baldytracker-vlawr\");\n\n        const mongodb = client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        const users = mongodb.db('baldyData').collection('userCreds');\n        const app = Stitch.defaultAppClient;\n        setClient(client);\n        setDB(users);\n        setMongoDBClient(mongodb);\n        setApp(app);\n    }, []);\n\n    //Functions:\n    const emailInput = event => {\n        setEmail(event.target.value);\n    };\n    const passwordInput = event => {\n        setPassword(event.target.value);\n    };\n    const login = () => {\n        const credential = new UserPasswordCredential(email, password);\n        app.auth.loginWithCredential(credential)\n            .then(authedUser => {\n                console.log(`successfully logged in with id: ${authedUser.id}`)\n                setUserID(authedUser.id);\n                setRedirect(true);\n            })\n            .catch(err => {\n                console.error(`login failed with error: ${err}`)\n                setError(err);\n            })\n    }\n\n    if (redirect) {\n        return <Redirect to={{ pathname: '/add', app, client, db, mongodbClient, user }} />\n    } else {\n        return (\n            <Container maxWidth='lg'>\n                <CssBaseline />\n                <Paper className={classes.box}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography className={classes.loginHeader} variant='h2'>Sign In</Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={email}\n                            onChange={emailInput}\n                            autoFocus\n                        />\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={passwordInput}\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </form>\n                    {loginError ? <Typography className={classes.errorHeader}>Invalid Credentials</Typography> : null}\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.loginButton}\n                        onClick={login}\n                    >\n                        Sign In\n                </Button>\n                    <Link to={{\n                        pathname: '/signup',\n                        app,\n                        client,\n                        db,\n                        mongodbClient,\n                    }}\n                    className={classes.link}\n                    >First time user? Click here to Sign Up</Link>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport {Pie} from 'react-chartjs-2';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: '15% 5% 5% 5%',\n        backgroundColor: '#eceff1',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '2px',\n    },\n    flex: {\n        flexGrow: 1,\n        paddingTop: '.4rem',\n        margin: '.4rem',\n    },\n    heading: {\n        fontSize: '2rem',\n        textAlign: 'center',\n        color: '#1a237e',\n        margin: '2% 0 2% 0',\n    },\n    name: {\n        backgroundColor: 'whitesmoke',\n        margin: '1px',\n        color: '#1a237e',\n        borderStyle: 'solid',\n        borderColor: '#78909c',\n        borderWidth: '1px',\n    }\n})\n);\n\nexport default function DisplayBurden(props) {\n    const [data, setData] = useState(undefined);\n    const app = props.location.app;\n\n    function getData() {\n        const mongodb = app.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n        const sleepCollection = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        sleepCollection.find({}).toArray()\n            .then((data) =>{\n                setData(data);\n            })\n            .catch((err)=> err);\n    }\n\n    function calculateEffort() {\n        if (data){\n            let jackCount = 0;\n            for (let i = 0; i < data.length; i++){\n                if (data[i].user === '5e698b195dabe06755978529') {\n                    jackCount++;\n                }\n            }\n            let jackEff = (jackCount/data.length)*100;\n            let ashEff = 100 - jackEff;\n            return [ashEff.toFixed(2), jackEff.toFixed(2)];\n        } else {\n            return [0, 0]; \n        }\n    }\n\n    useEffect(()=>{\n        getData();\n        }, [data]);\n\n    const classes = useStyles();\n    const [ashEffort, jackEffort] = calculateEffort();\n\n    const pieData = {\n        labels: [\n            'Ashley Effort',\n            'Jack Effort',\n        ],\n        datasets: [{\n            data: [ashEffort, jackEffort],\n            backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            ],\n            hoverBackgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            ]\n        }]\n    };\n\n\nreturn (\n    <>\n        <Paper elevation={3} className={classes.container}>\n            <Typography className={classes.heading}>Effort</Typography>\n            <Pie data={pieData}/>\n        </Paper>\n    </>\n)\n\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport {Line} from 'react-chartjs-2';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: '2.5% 5% 5% 5%',\n        backgroundColor: '#eceff1',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '2px',\n    },\n    heading: {\n        fontSize: '2rem',\n        textAlign: 'center',\n        color: '#1a237e',\n        margin: '2% 0 2% 0',\n    },\n}));\n\nexport default function SleepGraph(props) {\n    const [sleepData, setSleep] = useState(undefined);\n    const [wakeData, setWake] = useState(undefined);\n    const app = props.location.app;\n\n    function getData() {\n        const options = {'sort' : {\"current_date\": -1},};\n        const wakeQuery = {\"sleep\": false};\n        const sleepQuery = {\"sleep\": true};\n        const mongodb = app.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n        const sleepCollection = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        sleepCollection.find(sleepQuery, options).toArray()\n            .then((data) =>{\n                setSleep(data);\n            })\n            .catch((err)=> err);\n        sleepCollection.find(wakeQuery, options).toArray()\n            .then((data) =>{\n                setWake(data);\n            })\n            .catch((err)=> err)\n    }\n\n    useEffect(()=>{\n        getData();\n        }, [sleepData]);\n\n    function calculateDuration() {\n        if (sleepData && wakeData){\n            let hours = [];\n            let days = [];\n            for (let i=0; i< sleepData.length; i++){\n                days.push(sleepData[i].timeStamp.date)\n                let startTime = sleepData[i].timeStamp.time;\n                let endTime = wakeData[i].timeStamp.time;\n                let dur = (moment\n                    .duration(moment(endTime, 'h:mm:ss a')\n                    .diff(moment(startTime, 'h:mm:ss a')))\n                    .asSeconds())/60;\n                hours.push(dur);\n            }\n            return [hours, days];\n        } else {\n            let hours = [];\n            let days = [];\n            return [hours, days];\n        }\n    }    \n    \n    const [hours, days] = calculateDuration();\n\n    const data = {\n        labels: days,\n        datasets: [\n            {\n            label: 'Sleep Duration',\n            fill: false,\n            lineTension: 0.1,\n            backgroundColor: 'rgba(75,192,192,0.4)',\n            borderColor: 'rgba(75,192,192,1)',\n            borderCapStyle: 'butt',\n            borderDash: [],\n            borderDashOffset: 0.0,\n            borderJoinStyle: 'miter',\n            pointBorderColor: 'rgba(75,192,192,1)',\n            pointBackgroundColor: '#fff',\n            pointBorderWidth: 1,\n            pointHoverRadius: 5,\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\n            pointHoverBorderWidth: 2,\n            pointRadius: 1,\n            pointHitRadius: 10,\n            data: hours,\n            }\n        ]\n        };\n\n    const classes = useStyles();\n    if (!app) {\n        return <Redirect to={{ pathname: '/logout' }} />\n    } else {\n        return (\n            <Paper elevation={3} className={classes.container}>\n                <Typography className={classes.heading}>Sleep Timeline</Typography>\n                {sleepData && wakeData ? <Line data={data}/> :<Typography>Loading...</Typography>}\n            </Paper>\n        );\n}\n};","import React,  { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport moment from 'moment';\nimport { ThemeProvider } from 'styled-components';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: '2.5% 5% 5% 5%',\n        backgroundColor: '#eceff1',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '2px',\n    },\n    heading: {\n        fontSize: '2rem',\n        textAlign: 'center',\n        color: '#1a237e',\n        margin: '2% 0 2% 0',\n    },\n}));\n\n\nexport default function SleepWakeGraph(props) {\n    const [sleepData, setSleep] = useState(undefined);\n    const [wakeData, setWake] = useState(undefined);\n    const [sleepHours, setHours] = useState([]);\n    const [complete, setComplete] = useState(false);\n    const [graphData, setData] = useState(undefined);\n    const app = props.location.app;\n\n    function getData() {\n        const options = { 'sort': { \"current_date\": -1 }, };\n        const wakeQuery = { \"sleep\": false };\n        const sleepQuery = { \"sleep\": true };\n        const mongodb = app.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n        const sleepCollection = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        sleepCollection.find(sleepQuery, options).toArray()\n            .then((data) => {\n                setSleep(data);\n            })\n            .catch((err) => err);\n        sleepCollection.find(wakeQuery, options).toArray()\n            .then((data) => {\n                setWake(data);\n            })\n            .catch((err) => err)\n    };\n\n    function calculateCounts() {\n        if (sleepData && wakeData && ! complete){\n            let sleepTimes = [];\n            let zero = 0;\n            let one = 0;\n            let two = 0;\n            let three = 0;\n            let four = 0;\n            let five = 0;\n            let six = 0;\n            let seven = 0;\n            let eight = 0;\n            let nine = 0;\n            let ten = 0;\n            let eleven = 0;\n            let twelve = 0;\n            let thirteen = 0;\n            let fourteen = 0;\n            let fifteen = 0;\n            let sixteen = 0;\n            let seventeen = 0;\n            let eightteen = 0;\n            let nineteen = 0;\n            let twenty = 0;\n            let twentyone = 0;\n            let twentytwo = 0;\n            let twentythree = 0;\n            for (let i=0; i < sleepData.length; i++){\n                let sleepHour = moment(sleepData[i].timeStamp.time, 'h:mm:ss a').format('HH');\n                switch (sleepHour) {\n                    case '00':\n                        zero ++;\n                        break;\n                    case '01':\n                        one ++;\n                        break;\n                    case '02':\n                        two++;\n                        break;\n                    case '03':\n                        three++;\n                        break;\n                    case '04':\n                        four ++;\n                        break;\n                    case '05':\n                        five ++;\n                        break;\n                    case '06':\n                        six++;\n                        break;\n                    case '07':\n                        seven++;\n                        break;\n                    case '08':\n                        eight ++;\n                        break;\n                    case '09':\n                        nine ++;\n                        break;\n                    case '10':\n                        ten ++;\n                        break;\n                    case '11':\n                        eleven++;\n                        break;\n                    case '12':\n                        twelve ++;\n                        break;\n                    case '13':\n                        thirteen ++;\n                        break;\n                    case '14':\n                        fourteen++;\n                        break;\n                    case '15':\n                        fifteen++;\n                        break;\n                    case '16':\n                        sixteen ++;\n                        break;\n                    case '17':\n                        seventeen ++;\n                        break;\n                    case '18':\n                        eightteen++;\n                        break;\n                    case '19':\n                        nineteen++;\n                        break;\n                    case '20':\n                        twenty ++;\n                        break;\n                    case '21':\n                        twentyone ++;\n                        break;\n                    case '22':\n                        twentytwo++;\n                        break;\n                    case '23':\n                        twentythree++;\n                        break;\n                }\n            }\n            sleepTimes.push(zero, one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen, seventeen, eightteen, nineteen, twenty, twentyone, twentytwo, twentythree);\n            setHours(sleepTimes);\n            const sleepCountData = {\n                labels: ['12 a.m.', '1 a.m.', '2 a.m.', '3 a.m.', '4 a.m.', '5 a.m.', '6 a.m.', '7 a.m.', '8 a.m.', '9 a.m.', '10 a.m.', '11 a.m.', '12 p.m.', '1 p.m.', '2 p.m.', '3 p.m.', '4 p.m.', '5 p.m.', '6  p.m.', '7 p.m.', '8 p.m.', '9 p.m.', '10 p.m.', '11 p.m.'],\n                datasets: [\n                    {\n                    label: 'Sleep Frequency',\n                    fill: true,\n                    lineTension: 0.25,\n                    backgroundColor: 'rgba(134, 191, 214, 0.27)',\n                    borderColor: 'rgba(62, 93, 214, 1)',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: 'rgba(75,192,192,1)',\n                    pointBackgroundColor: '#fff',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: 'rgba(62, 93, 214, 1)',\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: sleepTimes,\n                    }\n                ]\n                };\n            setData(sleepCountData);\n            setComplete(true);\n        } else {\n            let sleepTimes = [0];\n            setHours(sleepTimes);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n        calculateCounts();\n    }, [sleepData]);\n\n    const classes = useStyles();\n    if (!app) {\n        return <Redirect to={{ pathname: '/logout' }} />\n    } else {\n        return (\n            <Paper elevation={3} className={classes.container}>\n                <Typography className={classes.heading}>When does he sleep?</Typography>\n                {graphData && complete ? <Line data={graphData} /> : <Typography>Loading...</Typography>}\n            </Paper>\n        );\n    }\n\n}\n\n","import React from 'react';\nimport HeaderHideScroll from '../components/headerHideScroll';\nimport DisplayBurden from '../components/displayBurden';\nimport SleepGraph from '../components/sleepGraph';\nimport SleepWakeGraph from '../components/sleepWakeGraph';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function ViewData(props) {\n    return (\n        <>\n        <HeaderHideScroll {...props}></HeaderHideScroll>\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={6} lg={6}><DisplayBurden {...props}/></Grid>\n            <Grid item xs={12} sm={12} md={6} lg={6}><SleepGraph {...props}/></Grid>\n            <Grid item xs={12} sm={12} md={6} lg={6}><SleepWakeGraph {...props}/></Grid>\n        </Grid>\n        </>\n    )\n};","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Avatar, Button, Container, TextField, Typography, CssBaseline, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Stitch, UserPasswordCredential, UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\n\n// Styling:\nconst useStyles = makeStyles(theme => ({\n    text: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        [theme.breakpoints.down('sm')]: {\n            width: '85%',\n            margin: '0 10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '50%',\n            margin: '0 25%',\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            margin: '0 25%',\n        },\n    },\n    box: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px',\n        width: '50%',\n        marginTop: theme.spacing(8),\n        marginLeft: '25%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        border: 'solid',\n        borderColor: 'lightgrey',\n        borderWidth: '1px',\n    },\n    loginButton: {\n        color: 'white',\n        border: 'solid',\n        borderColor: 'black',\n        borderWidth: '1px',\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginHeader: {\n        width: '40%',\n        color: 'black',\n        textAlign: 'center',\n        alignContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '22px',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '36px',\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '52px',\n        },\n    },\n    errorHeader: {\n        width: '40%',\n        color: 'white',\n        backgroundColor: '#f28c82',\n        textAlign: 'center',\n        alignContent: 'center',\n        border: 'none',\n        borderRadius: '5px',\n        margin: '0 25%',\n        padding: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction SignUp(props) {\n    //Initial variable creation:\n    const [app, setApp] = useState('');\n    const [client, setClient] = useState('');\n    const [mongodbClient, setMongoDBClient] = useState('');\n    const [db, setDB] = useState('');\n    const [loginError, setLoginError] = useState(false);\n    const [signupError, setsignupError] = useState(false);\n    const [error, setError] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [user, setUserID] = useState('');\n    const classes = useStyles();\n\n    //Setup Mongo Stitch App:\n    useEffect(() => {\n        setClient(props.location.client);\n        setMongoDBClient(props.location.mongdbClient);\n        setDB(props.location.db);\n        setApp(props.location.app);\n    }, [props.location]);\n\n    //Functions:\n    const emailInput = event => {\n        setEmail(event.target.value);\n    };\n    const passwordInput = event => {\n        setPassword(event.target.value);\n    };\n    const login = () => {\n        const credential = new UserPasswordCredential(email, password);\n        app.auth.loginWithCredential(credential)\n            .then(authedUser => {\n                console.log(`successfully logged in with id: ${authedUser.id}`)\n                setUserID(authedUser.id);\n                createUser(authedUser.id);\n            })\n            .catch(err => {\n                console.error(`login failed with error: ${err}`)\n                setLoginError(err);\n            })\n    }\n    const signIn = () => {\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n        emailPasswordClient.registerWithEmail(email, password)\n            .then(() => {\n                login()\n            })\n            .catch(err => {\n                setsignupError(true); \n                setError(err);  \n            });\n    }\n    const createUser = (id) => {\n        db\n            .insertOne({\n                owner_id: id,\n                email: email,\n                password: password,\n            })\n            .then(() =>{\n                setRedirect(true);\n            })\n            .catch((err)=>{\n                console.log('Create User Error ' + err)\n                setsignupError(true); \n                setError(err);  \n            });\n    };\n\n    if (redirect) {\n        return <Redirect to={{ pathname: '/add', app, client, db, mongodbClient, user }} />\n    } else {\n        return (\n            <Container maxWidth='lg'>\n                <CssBaseline />\n                <Paper className={classes.box}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography className={classes.loginHeader} variant='h3'>New User Sign In</Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={email}\n                            onChange={emailInput}\n                            autoFocus\n                        />\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={passwordInput}\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </form>\n        {signupError ? <Typography className={classes.errorHeader}>{error.message}</Typography> : null}\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.loginButton}\n                        onClick={signIn}\n                    >\n                        Create User\n                </Button>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default SignUp;","import React from 'react';\nimport { Avatar, Container, Typography, CssBaseline, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\n// Styling:\nconst useStyles = makeStyles(theme => ({\n    box: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px',\n        width: '50%',\n        marginTop: theme.spacing(8),\n        marginLeft: '25%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        border: 'solid',\n        borderColor: 'lightgrey',\n        borderWidth: '1px',\n    },\n    loginHeader: {\n        width: '40%',\n        color: 'black',\n        textAlign: 'center',\n        alignContent: 'center',\n        paddingBottom: '10%',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '22px',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '36px',\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '52px',\n        },\n    },\n}));\n\nfunction Logout() {\n    const classes = useStyles();\n        return (\n            <Container maxWidth='lg'>\n                <CssBaseline />\n                <Paper className={classes.box}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography className={classes.loginHeader} variant='h3'>You have signed out.</Typography>\n                </Paper>\n            </Container>\n        )\n    }\n\nexport default Logout;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddData from './pages/addData';\nimport Help from './pages/help';\nimport Login from './pages/login';\nimport ViewData from './pages/viewData';\nimport Signup from './pages/signup';\nimport Logout from './pages/logoutPage';\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Switch>\n        <Route exact path=\"/\" component={Login}/>\n        <Route exact path=\"/signup\" component={Signup}/>\n        <Route exact path=\"/add\" component={AddData}/>\n        <Route exact path=\"/dashboard\" component={ViewData}/>\n        <Route exact path=\"/help\" component={Help}/>\n        <Route exact path=\"/logout\" component={Logout}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}