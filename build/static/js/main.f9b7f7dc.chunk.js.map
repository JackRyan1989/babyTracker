{"version":3,"sources":["components/headerHideScroll.js","components/dataAddedDialog.js","components/sleepButton.js","components/wakeButton.js","pages/addData.js","pages/help.js","pages/login.js","components/displayBurden.js","components/sleepGraph.js","components/sleepWakeGraph.js","pages/viewData.js","pages/signup.js","pages/logoutPage.js","App.js","serviceWorker.js","index.js"],"names":["StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","ElevationScroll","children","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","HeaderHideScroll","app","location","client","mongodbClient","db","user","useState","anchorEl","setAnchorEl","redirect","setRedirect","target","setTarget","to","pathname","AppBar","Toolbar","IconButton","edge","color","aria-label","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","component","DataAddedDialog","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","dataType","useEffect","openDialog","thisMoment","moment","format","Dialog","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","useStyles","makeStyles","icon","fontSize","text","borderBottomStyle","borderBottomColor","borderBottom","width","marginLeft","SleepButton","classes","dispDialog","setDialog","sleepData","collection","userID","now","month","date","year","time","insertOne","sleep","timeStamp","catch","console","error","className","WakeButton","button","marginTop","padding","spacing","textAlign","AddData","Grid","container","item","xs","sm","md","Help","palette","secondary","margin","up","box","backgroundColor","borderRadius","display","flexDirection","alignItems","alignSelf","avatar","main","borderColor","borderWidth","loginButton","loginHeader","alignContent","link","errorHeader","form","signupButton","Login","setApp","setClient","setMongoDBClient","setDB","loginError","setError","email","setEmail","password","setPassword","setUserID","Stitch","initializeDefaultAppClient","mongodb","getServiceClient","RemoteMongoClient","factory","users","defaultAppClient","Container","maxWidth","CssBaseline","Paper","Avatar","noValidate","TextField","required","fullWidth","label","name","autoComplete","value","onChange","type","credential","UserPasswordCredential","auth","loginWithCredential","then","authedUser","err","flex","flexGrow","paddingTop","heading","borderStyle","DisplayBurden","undefined","data","setData","find","toArray","jackCount","i","length","jackEff","toFixed","calculateEffort","pieData","labels","datasets","hoverBackgroundColor","SleepGraph","setSleep","wakeData","setWake","complete","setComplete","options","sleepCollection","getData","hours","days","push","startTime","endTime","dur","duration","diff","asSeconds","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","calculateDuration","SleepWakeGraph","setHours","graphData","sleepTimes","zero","one","two","three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eightteen","nineteen","twenty","twentyone","twentytwo","twentythree","calculateCounts","ViewData","lg","SignUp","setLoginError","signupError","setsignupError","mongdbClient","createUser","owner_id","log","message","getProviderClient","UserPasswordAuthProviderClient","registerWithEmail","login","paddingBottom","Logout","App","basename","window","exact","path","Signup","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9b7f7dc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport AppBar from '@material-ui/core/AppBar';\nimport PropTypes from 'prop-types';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n    },\n})(props => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n        }}\n        {...props}\n    />\n));\n\nfunction ElevationScroll(props) {\n    const { children } = props;\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n    });\n\n    return React.cloneElement(children, {\n        elevation: trigger ? 4 : 0,\n    });\n}\n\nElevationScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    window: PropTypes.func,\n};\n\nexport default function HeaderHideScroll(props) {\n    const app = props.location.app;\n    const client = props.location.client;\n    const mongodbClient = props.location.mongodbClient;\n    const db = props.location.db;\n    const user = props.location.user;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [redirect, setRedirect] = useState(false);\n    const [target, setTarget] = useState('');\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const handleLogout = (event) => {\n        setAnchorEl(event.currentTarget)\n        setRedirect(true)\n        setTarget('/logout')\n    };\n    const dashboard = (event) => {\n        setAnchorEl(event.currentTarget)\n        setRedirect(true)\n        setTarget('/dashboard')\n    }\n    const addData = (event) => {\n        setAnchorEl(event.currentTarget)\n        setRedirect(true)\n        setTarget('/add')\n    }\n\n    if (redirect) {\n        return <Redirect to={{ pathname: target, app, client, mongodbClient, db, user }} />\n    } else {\n        return (\n            <ElevationScroll {...props}>\n                <AppBar>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n                            <MenuIcon onClick={handleClick} />\n                            <StyledMenu\n                                id=\"simple-menu\"\n                                anchorEl={anchorEl}\n                                keepMounted\n                                open={Boolean(anchorEl)}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={addData}>Add Data</MenuItem>\n                                <MenuItem onClick={dashboard}>Dashboard</MenuItem>\n                                <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                            </StyledMenu>\n                        </IconButton>\n                        <Typography variant=\"h5\" component=\"div\">BabyTracker App</Typography>\n                    </Toolbar>\n                </AppBar>\n            </ElevationScroll>\n        )\n    }\n}","import React, { useState, useEffect } from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport { useTheme } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nexport default function DataAddedDialog(props) {\n    const [open, setOpen] = useState(false);\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n    const dataType = props.dataType;\n\n    useEffect(() =>{\n        setOpen(props.openDialog);\n    }, [props.openDialog]);\n  \n    let thisMoment = moment().format('MMMM Do YYYY, h:mm:ss a');\n\n    return (\n        <div>\n          <Dialog\n            fullScreen={fullScreen}\n            open={open}\n            onClose={props.handleClose}\n            aria-labelledby=\"responsive-dialog-title\"\n          >\n            <DialogTitle id=\"responsive-dialog-title\">{\"Data Added!\"}</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Baldy {dataType} at {thisMoment}.\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              <Button autoFocus onClick={props.handleClose} color=\"primary\">\n                Close!\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </div>\n      );\n    }","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport NightsStayIcon from '@material-ui/icons/NightsStay';\nimport { Button, Typography } from '@material-ui/core/';\nimport DataAddedDialog from './dataAddedDialog';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fontSize: '8rem',\n        color: '#7164f9',\n    },\n    text: {\n        fontSize: '2rem',\n        borderBottomStyle: 'solid',\n        borderBottomColor: 'grey',\n        borderBottom: '1px',\n        width: '75%',\n        marginLeft: '14.5%',\n    },\n})\n);\n\n\nexport default function SleepButton(props) {\n    const classes = useStyles();\n    const [dispDialog, setDialog] = useState(false);\n    const handleClose = () => {\n        setDialog(false);\n      };\n    const sleepTimeStamp = () => {\n        const mongodb = props.location.mongodbClient;\n        const sleepData = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        const userID = props.location.user;\n        const now = {\n            month: moment().format('MMMM'),\n            date: moment().format('dddd Do'),\n            year: moment().format('YYYY'),\n            time: moment().format('h:mm:ss a'),\n        };\n        setDialog(true);\n        sleepData.insertOne({\n            sleep: true,\n            timeStamp: now,\n            user: userID\n        }).catch(console.error);\n    };\n\n    return (\n        <>\n            <Button\n                onClick = {sleepTimeStamp}\n            ><NightsStayIcon className={classes.icon} />\n            </Button>\n            <Typography className={classes.text}>Sleep</Typography>\n            <DataAddedDialog openDialog={dispDialog} handleClose={handleClose} dataType={'sleep'} />\n        </>\n    )\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AlarmAddRoundedIcon from '@material-ui/icons/AlarmAddRounded';\nimport DataAddedDialog from './dataAddedDialog';\nimport { Button, Typography } from '@material-ui/core/';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fontSize: '8rem',\n        color: '#b23f3f',\n    },\n    text: {\n        fontSize: '2rem',\n        borderBottomStyle: 'solid',\n        borderBottomColor: 'grey',\n        borderBottom: '1px',\n        width: '75%',\n        marginLeft: '14.5%',\n    },\n})\n);\n\nexport default function WakeButton(props) {\n    const classes = useStyles();\n    const [dispDialog, setDialog] = useState(false);\n    const handleClose = () => {\n        setDialog(false);\n      };\n    const wakeTimeStamp = () => {\n        const mongodb = props.location.mongodbClient;\n        const sleepData = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        const userID = props.location.user;\n        const now = {\n            month: moment().format('MMMM'),\n            date: moment().format('dddd Do'),\n            year: moment().format('YYYY'),\n            time: moment().format('h:mm:ss a'),\n        };\n        setDialog(true);\n        sleepData.insertOne({\n            sleep: false,\n            timeStamp: now,\n            user: userID\n        }).catch(console.error);\n    };\n    return (\n        <>\n            <Button\n                onClick={wakeTimeStamp}\n            ><AlarmAddRoundedIcon className={classes.icon} /></Button>\n            <Typography className={classes.text}>Wake</Typography>\n            <DataAddedDialog openDialog={dispDialog} handleClose={handleClose} dataType={'wake'} />\n        </>\n    )\n\n}","import React from 'react';\nimport { Grid } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport HeaderHideScroll from '../components/headerHideScroll';\nimport SleepButton from '../components/sleepButton';\nimport WakeButton from '../components/wakeButton';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginTop: '15%',\n        padding: theme.spacing(1),\n        textAlign: 'center',\n    },\n})\n);\n\nfunction AddData(props) {\n    const classes = useStyles();\n    return (\n        <>\n            <HeaderHideScroll {...props}></HeaderHideScroll>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={2} md={3}></Grid>\n                <Grid item xs={12} sm={4} md={3} className={classes.button}><SleepButton {...props} /></Grid>\n                <Grid item xs={12} sm={4} md={3} className={classes.button}><WakeButton {...props} /></Grid>\n                <Grid item xs={12} sm={2} md={3}></Grid>\n            </Grid>\n        </>\n    )\n\n};\n\nexport default AddData;","import React from 'react';\n\n\nexport default function Help() {\n    return (\n        <>\n        <div>Help</div>\n        </>\n    )\n};","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Avatar, Button, Container, TextField, Typography, CssBaseline, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Stitch, RemoteMongoClient, UserPasswordCredential } from \"mongodb-stitch-browser-sdk\";\n\n// Styling:\nconst useStyles = makeStyles(theme => ({\n    text: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        [theme.breakpoints.down('sm')]: {\n            width: '85%',\n            margin: '0 10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '65%',\n            margin: '0 15%',\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            margin: '0 25%',\n        },\n    },\n    box: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px',\n        width: '50%',\n        marginTop: theme.spacing(8),\n        marginLeft: '25%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        border: 'solid',\n        borderColor: 'lightgrey',\n        borderWidth: '1px',\n    },\n    loginButton: {\n        color: 'white',\n        border: 'solid',\n        borderColor: 'black',\n        borderWidth: '1px',\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginHeader: {\n        width: '40%',\n        color: 'black',\n        textAlign: 'center',\n        alignContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '22px',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '36px',\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '52px',\n        },\n    },\n    link: {\n        padding: '5%',\n    },\n    errorHeader: {\n        width: '40%',\n        color: 'white',\n        backgroundColor: '#f28c82',\n        textAlign: 'center',\n        alignContent: 'center',\n        border: 'none',\n        borderRadius: '5px',\n        margin: '0 25%',\n        padding: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    signupButton: {\n        color: 'white',\n        border: 'solid',\n        borderColor: 'black',\n        borderWidth: '1px',\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction Login() {\n    //Initial variable creation:\n    const [app, setApp] = useState('');\n    const [client, setClient] = useState('');\n    const [mongodbClient, setMongoDBClient] = useState('');\n    const [db, setDB] = useState('');\n    const [loginError, setError] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [user, setUserID] = useState('');\n    const classes = useStyles();\n\n    //Setup Mongo Stitch App:\n    useEffect(() => {\n        // Initialize Stitch App Client\n        const client = Stitch.initializeDefaultAppClient(\"baldytracker-vlawr\");\n\n        const mongodb = client.getServiceClient(\n            RemoteMongoClient.factory,\n            \"mongodb-atlas\"\n        );\n        const users = mongodb.db('baldyData').collection('userCreds');\n        const app = Stitch.defaultAppClient;\n        setClient(client);\n        setDB(users);\n        setMongoDBClient(mongodb);\n        setApp(app);\n    }, []);\n\n    //Functions:\n    const emailInput = event => {\n        setEmail(event.target.value);\n    };\n    const passwordInput = event => {\n        setPassword(event.target.value);\n    };\n    const login = () => {\n        const credential = new UserPasswordCredential(email, password);\n        app.auth.loginWithCredential(credential)\n            .then(authedUser => {\n                setUserID(authedUser.id);\n                setRedirect(true);\n            })\n            .catch(err => {\n                console.error(`login failed with error: ${err}`)\n                setError(err);\n            })\n    }\n\n    if (redirect) {\n        return <Redirect to={{ pathname: '/add', app, client, db, mongodbClient, user }} />\n    } else {\n        return (\n            <Container maxWidth='lg'>\n                <CssBaseline />\n                <Paper className={classes.box}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography className={classes.loginHeader} variant='h2'>Sign In</Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={email}\n                            onChange={emailInput}\n                            autoFocus\n                        />\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={passwordInput}\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </form>\n                    {loginError ? <Typography className={classes.errorHeader}>Invalid Credentials</Typography> : null}\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.loginButton}\n                        onClick={login}\n                    >\n                        Sign In\n                </Button>\n                    <Link to={{\n                        pathname: '/signup',\n                        app,\n                        client,\n                        db,\n                        mongodbClient,\n                    }}\n                    className={classes.link}\n                    >First time user? Click here to Sign Up</Link>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport {Pie} from 'react-chartjs-2';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: '15% 5% 5% 5%',\n        backgroundColor: '#eceff1',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '2px',\n    },\n    flex: {\n        flexGrow: 1,\n        paddingTop: '.4rem',\n        margin: '.4rem',\n    },\n    heading: {\n        fontSize: '2rem',\n        textAlign: 'center',\n        color: '#1a237e',\n        margin: '2% 0 2% 0',\n    },\n    name: {\n        backgroundColor: 'whitesmoke',\n        margin: '1px',\n        color: '#1a237e',\n        borderStyle: 'solid',\n        borderColor: '#78909c',\n        borderWidth: '1px',\n    }\n})\n);\n\nexport default function DisplayBurden(props) {\n    const [data, setData] = useState(undefined);\n    const app = props.location.app;\n\n    function getData() {\n        const mongodb = app.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n        const sleepCollection = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        sleepCollection.find({}).toArray()\n            .then((data) =>{\n                setData(data);\n            })\n            .catch((err)=> err);\n    }\n\n    function calculateEffort() {\n        if (data){\n            let jackCount = 0;\n            for (let i = 0; i < data.length; i++){\n                if (data[i].user === '5e698b195dabe06755978529') {\n                    jackCount++;\n                }\n            }\n            let jackEff = (jackCount/data.length)*100;\n            let ashEff = 100 - jackEff;\n            return [ashEff.toFixed(2), jackEff.toFixed(2)];\n        } else {\n            return [0, 0]; \n        }\n    }\n\n    useEffect(()=>{\n        getData();\n        }, [data]);\n\n    const classes = useStyles();\n    const [ashEffort, jackEffort] = calculateEffort();\n\n    const pieData = {\n        labels: [\n            'Ashley Effort',\n            'Jack Effort',\n        ],\n        datasets: [{\n            data: [ashEffort, jackEffort],\n            backgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            ],\n            hoverBackgroundColor: [\n            '#FF6384',\n            '#36A2EB',\n            ]\n        }]\n    };\n\n\nreturn (\n    <>\n        <Paper elevation={3} className={classes.container}>\n            <Typography className={classes.heading}>Effort</Typography>\n            <Pie data={pieData}/>\n        </Paper>\n    </>\n)\n\n}","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport {Line} from 'react-chartjs-2';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: '2.5% 5% 5% 5%',\n        backgroundColor: '#eceff1',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '2px',\n    },\n    heading: {\n        fontSize: '2rem',\n        textAlign: 'center',\n        color: '#1a237e',\n        margin: '2% 0 2% 0',\n    },\n}));\n\nexport default function SleepGraph(props) {\n    const [sleepData, setSleep] = useState(undefined);\n    const [wakeData, setWake] = useState(undefined);\n    const [complete, setComplete] = useState(false);\n    const [data, setData] = useState(undefined);\n    const app = props.location.app;\n\n    function getData() {\n        const options = {'sort' : {\"current_date\": -1},};\n        const wakeQuery = {\"sleep\": false};\n        const sleepQuery = {\"sleep\": true};\n        const mongodb = app.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n        const sleepCollection = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        sleepCollection.find(sleepQuery, options).toArray()\n            .then((data) =>{\n                setSleep(data);\n            })\n            .catch((err)=> err);\n        sleepCollection.find(wakeQuery, options).toArray()\n            .then((data) =>{\n                setWake(data);\n            })\n            .catch((err)=> err)\n    }\n\n    function calculateDuration() {\n        if (sleepData && wakeData && ! complete){\n            let hours = [];\n            let days = [];\n            let length;\n            if (sleepData.length !== wakeData.length) {\n                sleepData.length < wakeData.length ? length = sleepData.length : length = wakeData.length;\n            } else {\n                length = sleepData.length;\n            }\n            for (let i=0; i< length; i++){\n                days.push(sleepData[i].timeStamp.date)\n                let startTime = sleepData[i].timeStamp.time;\n                let endTime = wakeData[i].timeStamp.time;\n                let dur = (moment\n                    .duration(moment(endTime, 'h:mm:ss a')\n                    .diff(moment(startTime, 'h:mm:ss a')))\n                    .asSeconds())/60;\n                hours.push(dur);\n            }\n            const graphData = {\n                labels: days,\n                datasets: [\n                    {\n                    label: 'Sleep Duration',\n                    fill: false,\n                    lineTension: 0.1,\n                    backgroundColor: 'rgba(75,192,192,0.4)',\n                    borderColor: 'rgba(75,192,192,1)',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: 'rgba(75,192,192,1)',\n                    pointBackgroundColor: '#fff',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: hours,\n                    }\n                ]\n                };\n                setData(graphData);\n                setComplete(true);\n        } else {\n            return\n        }\n    };  \n\n    useEffect(()=>{\n        getData();\n        calculateDuration();\n        }, [sleepData]);\n\n\n    const classes = useStyles();\n    if (!app) {\n        return <Redirect to={{ pathname: '/logout' }} />\n    } else {\n        return (\n            <Paper elevation={3} className={classes.container}>\n                <Typography className={classes.heading}>Sleep Timeline</Typography>\n                {sleepData && wakeData ? <Line data={data}/> :<Typography>Loading...</Typography>}\n            </Paper>\n        );\n}\n};","import React,  { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { RemoteMongoClient } from \"mongodb-stitch-browser-sdk\";\nimport moment from 'moment';\nimport { ThemeProvider } from 'styled-components';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        margin: '2.5% 5% 5% 5%',\n        backgroundColor: '#eceff1',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '2px',\n    },\n    heading: {\n        fontSize: '2rem',\n        textAlign: 'center',\n        color: '#1a237e',\n        margin: '2% 0 2% 0',\n    },\n}));\n\n\nexport default function SleepWakeGraph(props) {\n    const [sleepData, setSleep] = useState(undefined);\n    const [wakeData, setWake] = useState(undefined);\n    const [sleepHours, setHours] = useState([]);\n    const [complete, setComplete] = useState(false);\n    const [graphData, setData] = useState(undefined);\n    const app = props.location.app;\n\n    function getData() {\n        const options = { 'sort': { \"current_date\": -1 }, };\n        const wakeQuery = { \"sleep\": false };\n        const sleepQuery = { \"sleep\": true };\n        const mongodb = app.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n        const sleepCollection = mongodb.db(\"baldyData\").collection(\"sleepData\");\n        sleepCollection.find(sleepQuery, options).toArray()\n            .then((data) => {\n                setSleep(data);\n            })\n            .catch((err) => err);\n        sleepCollection.find(wakeQuery, options).toArray()\n            .then((data) => {\n                setWake(data);\n            })\n            .catch((err) => err)\n    };\n\n    function calculateCounts() {\n        if (sleepData && wakeData && ! complete){\n            let sleepTimes = [];\n            let zero = 0;\n            let one = 0;\n            let two = 0;\n            let three = 0;\n            let four = 0;\n            let five = 0;\n            let six = 0;\n            let seven = 0;\n            let eight = 0;\n            let nine = 0;\n            let ten = 0;\n            let eleven = 0;\n            let twelve = 0;\n            let thirteen = 0;\n            let fourteen = 0;\n            let fifteen = 0;\n            let sixteen = 0;\n            let seventeen = 0;\n            let eightteen = 0;\n            let nineteen = 0;\n            let twenty = 0;\n            let twentyone = 0;\n            let twentytwo = 0;\n            let twentythree = 0;\n            for (let i=0; i < sleepData.length; i++){\n                let sleepHour = moment(sleepData[i].timeStamp.time, 'h:mm:ss a').format('HH');\n                switch (sleepHour) {\n                    case '00':\n                        zero ++;\n                        break;\n                    case '01':\n                        one ++;\n                        break;\n                    case '02':\n                        two++;\n                        break;\n                    case '03':\n                        three++;\n                        break;\n                    case '04':\n                        four ++;\n                        break;\n                    case '05':\n                        five ++;\n                        break;\n                    case '06':\n                        six++;\n                        break;\n                    case '07':\n                        seven++;\n                        break;\n                    case '08':\n                        eight ++;\n                        break;\n                    case '09':\n                        nine ++;\n                        break;\n                    case '10':\n                        ten ++;\n                        break;\n                    case '11':\n                        eleven++;\n                        break;\n                    case '12':\n                        twelve ++;\n                        break;\n                    case '13':\n                        thirteen ++;\n                        break;\n                    case '14':\n                        fourteen++;\n                        break;\n                    case '15':\n                        fifteen++;\n                        break;\n                    case '16':\n                        sixteen ++;\n                        break;\n                    case '17':\n                        seventeen ++;\n                        break;\n                    case '18':\n                        eightteen++;\n                        break;\n                    case '19':\n                        nineteen++;\n                        break;\n                    case '20':\n                        twenty ++;\n                        break;\n                    case '21':\n                        twentyone ++;\n                        break;\n                    case '22':\n                        twentytwo++;\n                        break;\n                    case '23':\n                        twentythree++;\n                        break;\n                }\n            }\n            sleepTimes.push(zero, one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen, seventeen, eightteen, nineteen, twenty, twentyone, twentytwo, twentythree);\n            setHours(sleepTimes);\n            const sleepCountData = {\n                labels: ['12 a.m.', '1 a.m.', '2 a.m.', '3 a.m.', '4 a.m.', '5 a.m.', '6 a.m.', '7 a.m.', '8 a.m.', '9 a.m.', '10 a.m.', '11 a.m.', '12 p.m.', '1 p.m.', '2 p.m.', '3 p.m.', '4 p.m.', '5 p.m.', '6  p.m.', '7 p.m.', '8 p.m.', '9 p.m.', '10 p.m.', '11 p.m.'],\n                datasets: [\n                    {\n                    label: 'Sleep Frequency',\n                    fill: true,\n                    lineTension: 0.25,\n                    backgroundColor: 'rgba(134, 191, 214, 0.27)',\n                    borderColor: 'rgba(62, 93, 214, 1)',\n                    borderCapStyle: 'butt',\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: 'miter',\n                    pointBorderColor: 'rgba(75,192,192,1)',\n                    pointBackgroundColor: '#fff',\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: 'rgba(62, 93, 214, 1)',\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                    data: sleepTimes,\n                    }\n                ]\n                };\n            setData(sleepCountData);\n            setComplete(true);\n        } else {\n            let sleepTimes = [0];\n            setHours(sleepTimes);\n        }\n    };\n\n    useEffect(() => {\n        getData();\n        calculateCounts();\n    }, [sleepData]);\n\n    const classes = useStyles();\n    if (!app) {\n        return <Redirect to={{ pathname: '/logout' }} />\n    } else {\n        return (\n            <Paper elevation={3} className={classes.container}>\n                <Typography className={classes.heading}>When does he sleep?</Typography>\n                {graphData && complete ? <Line data={graphData} /> : <Typography>Loading...</Typography>}\n            </Paper>\n        );\n    }\n\n}\n\n","import React from 'react';\nimport HeaderHideScroll from '../components/headerHideScroll';\nimport DisplayBurden from '../components/displayBurden';\nimport SleepGraph from '../components/sleepGraph';\nimport SleepWakeGraph from '../components/sleepWakeGraph';\nimport Grid from '@material-ui/core/Grid';\n\nexport default function ViewData(props) {\n    return (\n        <>\n        <HeaderHideScroll {...props}></HeaderHideScroll>\n        <Grid container spacing={2}>\n            <Grid item xs={12} sm={12} md={12} lg={12}><DisplayBurden {...props}/></Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}><SleepGraph {...props}/></Grid>\n            <Grid item xs={12} sm={12} md={12} lg={12}><SleepWakeGraph {...props}/></Grid>\n        </Grid>\n        </>\n    )\n};","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Avatar, Button, Container, TextField, Typography, CssBaseline, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Stitch, UserPasswordCredential, UserPasswordAuthProviderClient } from \"mongodb-stitch-browser-sdk\";\n\n// Styling:\nconst useStyles = makeStyles(theme => ({\n    text: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        [theme.breakpoints.down('sm')]: {\n            width: '85%',\n            margin: '0 10%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '50%',\n            margin: '0 25%',\n        },\n        [theme.breakpoints.up('lg')]: {\n            width: '50%',\n            margin: '0 25%',\n        },\n    },\n    box: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px',\n        width: '50%',\n        marginTop: theme.spacing(8),\n        marginLeft: '25%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        border: 'solid',\n        borderColor: 'lightgrey',\n        borderWidth: '1px',\n    },\n    loginButton: {\n        color: 'white',\n        border: 'solid',\n        borderColor: 'black',\n        borderWidth: '1px',\n        margin: theme.spacing(3, 0, 2),\n    },\n    loginHeader: {\n        width: '40%',\n        color: 'black',\n        textAlign: 'center',\n        alignContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '22px',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '36px',\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '52px',\n        },\n    },\n    errorHeader: {\n        width: '40%',\n        color: 'white',\n        backgroundColor: '#f28c82',\n        textAlign: 'center',\n        alignContent: 'center',\n        border: 'none',\n        borderRadius: '5px',\n        margin: '0 25%',\n        padding: theme.spacing(1),\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n}));\n\nfunction SignUp(props) {\n    //Initial variable creation:\n    const [app, setApp] = useState('');\n    const [client, setClient] = useState('');\n    const [mongodbClient, setMongoDBClient] = useState('');\n    const [db, setDB] = useState('');\n    const [loginError, setLoginError] = useState(false);\n    const [signupError, setsignupError] = useState(false);\n    const [error, setError] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [user, setUserID] = useState('');\n    const classes = useStyles();\n\n    //Setup Mongo Stitch App:\n    useEffect(() => {\n        setClient(props.location.client);\n        setMongoDBClient(props.location.mongdbClient);\n        setDB(props.location.db);\n        setApp(props.location.app);\n    }, [props.location]);\n\n    //Functions:\n    const emailInput = event => {\n        setEmail(event.target.value);\n    };\n    const passwordInput = event => {\n        setPassword(event.target.value);\n    };\n    const login = () => {\n        const credential = new UserPasswordCredential(email, password);\n        app.auth.loginWithCredential(credential)\n            .then(authedUser => {\n                console.log(`successfully logged in with id: ${authedUser.id}`)\n                setUserID(authedUser.id);\n                createUser(authedUser.id);\n            })\n            .catch(err => {\n                console.error(`login failed with error: ${err}`)\n                setLoginError(err);\n            })\n    }\n    const signIn = () => {\n        const emailPasswordClient = client.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n        emailPasswordClient.registerWithEmail(email, password)\n            .then(() => {\n                login()\n            })\n            .catch(err => {\n                setsignupError(true); \n                setError(err);  \n            });\n    }\n    const createUser = (id) => {\n        db\n            .insertOne({\n                owner_id: id,\n                email: email,\n                password: password,\n            })\n            .then(() =>{\n                setRedirect(true);\n            })\n            .catch((err)=>{\n                console.log('Create User Error ' + err)\n                setsignupError(true); \n                setError(err);  \n            });\n    };\n\n    if (redirect) {\n        return <Redirect to={{ pathname: '/add', app, client, db, mongodbClient, user }} />\n    } else {\n        return (\n            <Container maxWidth='lg'>\n                <CssBaseline />\n                <Paper className={classes.box}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography className={classes.loginHeader} variant='h3'>New User Sign In</Typography>\n                    <form className={classes.form} noValidate>\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            value={email}\n                            onChange={emailInput}\n                            autoFocus\n                        />\n                        <TextField\n                            className={classes.text}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            value={password}\n                            onChange={passwordInput}\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                    </form>\n        {signupError ? <Typography className={classes.errorHeader}>{error.message}</Typography> : null}\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.loginButton}\n                        onClick={signIn}\n                    >\n                        Create User\n                </Button>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default SignUp;","import React from 'react';\nimport { Avatar, Container, Typography, CssBaseline, Paper } from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\n\n// Styling:\nconst useStyles = makeStyles(theme => ({\n    box: {\n        backgroundColor: 'whitesmoke',\n        borderRadius: '5px',\n        width: '50%',\n        marginTop: theme.spacing(8),\n        marginLeft: '25%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        alignSelf: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n        border: 'solid',\n        borderColor: 'lightgrey',\n        borderWidth: '1px',\n    },\n    loginHeader: {\n        width: '40%',\n        color: 'black',\n        textAlign: 'center',\n        alignContent: 'center',\n        paddingBottom: '10%',\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '22px',\n        },\n        [theme.breakpoints.up('md')]: {\n            fontSize: '36px',\n        },\n        [theme.breakpoints.up('lg')]: {\n            fontSize: '52px',\n        },\n    },\n}));\n\nfunction Logout() {\n    const classes = useStyles();\n        return (\n            <Container maxWidth='lg'>\n                <CssBaseline />\n                <Paper className={classes.box}>\n                    <Avatar className={classes.avatar}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <Typography className={classes.loginHeader} variant='h3'>You have signed out.</Typography>\n                </Paper>\n            </Container>\n        )\n    }\n\nexport default Logout;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddData from './pages/addData';\nimport Help from './pages/help';\nimport Login from './pages/login';\nimport ViewData from './pages/viewData';\nimport Signup from './pages/signup';\nimport Logout from './pages/logoutPage';\n\nfunction App() {\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <Switch>\n        <Route exact path=\"/\" component={Login}/>\n        <Route exact path=\"/signup\" component={Signup}/>\n        <Route exact path=\"/add\" component={AddData}/>\n        <Route exact path=\"/dashboard\" component={ViewData}/>\n        <Route exact path=\"/help\" component={Help}/>\n        <Route exact path=\"/logout\" component={Logout}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}